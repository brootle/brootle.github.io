/*! qencode-player 2020-03-20*/

!function(){"use strict";function d(){return document.getElementsByTagName("head")[0]}function e(){var t=this;t.dependencies={},t.loadEventListeners=[],t.allLoaded=!1,t.callLoadEventListeners=function(){window.setTimeout(function(){var e={};e.target=t;for(var n=0;n<t.loadEventListeners.length;n++)t.loadEventListeners[n].call(e)},0)},t.getFirstUnloadedDep=function(){for(var e in t.dependencies)if(t.dependencies.hasOwnProperty(e)){var n=t.dependencies[e];if(n&&!n.loaded)return n}return null},t.markAsLoaded=function(e){var n=t.dependencies[e];n&&(n.loaded=!0)},t.loadDependencyChain=function(){var e=t.getFirstUnloadedDep();if(e){var n=document.createElement(e.tag);n.setAttribute("id",e.id),n.setAttribute("link"===e.tag?"href":"src",e.url),"link"===e.tag&&n.setAttribute("rel","stylesheet"),"script"===e.tag?(n.addEventListener("load",function(){t.markAsLoaded(e.id),t.getFirstUnloadedDep()?t.loadDependencyChain():(t.allLoaded=!0,t.callLoadEventListeners())}),d().appendChild(n)):(d().appendChild(n),t.markAsLoaded(e.id),window.setTimeout(t.loadDependencyChain.bind(t).call()))}},t.unloadDependencies=function(){for(var e in t.dependencies)if(t.dependencies.hasOwnProperty(e)){var n=document.getElementById(e);n&&(n.remove(),this._allLoaded&=!1)}}}e.prototype.append=function(e,n){if("script"!==e&&"stylesheet"!==e)throw new Error("Only 'script' and 'stylesheet' types are supported");var t=function(e){return"qencode_elem_"+e+Math.round(1e3*Math.random())}(e);this.dependencies[t]={id:t,loaded:!1,tag:"stylesheet"===e?"link":"script",url:n}},e.prototype.reset=function(){this.unloadDependencies(),this.dependencies=[]},e.prototype.load=function(){this._allLoaded||this.loadDependencyChain()},e.prototype.unload=function(){this.unloadDependencies()},e.prototype.addEventListener=function(e,n){if("load"===e){if("function"!=typeof n)throw new Error("Only functions are supported as listeners");this.loadEventListeners.push(n)}},e.prototype.removeEventListener=function(e,n){if("load"===e){var t=this.loadEventListeners.indexOf(n);-1<t&&this.loadEventListeners.splice(t,1)}},window.qencodeDependenciesRegistry=new e}(),function(){var e=document.getElementsByTagName("head")[0];if(!e)throw new Error("Found no <head> element");var n=document.createElement("style");if(n.setAttribute("id","vjscustomstyleimmediate"),n.setAttribute("type","text/css"),n.innerHTML=".video-js .vjs-big-play-button {display: none !important;}",e.appendChild(n),!window.qencodeDependenciesRegistry)throw new Error("The dependency registry is not available");var t=window.qencode_player_path_prefix||"";window.qencode_default_analytics_endpoint=window.qencode_default_analytics_endpoint||"/",window.qencode_default_developer_key=window.qencode_default_developer_key||"devkey";var d=["https://vjs.zencdn.net/7.4.1/video-js.css","https://fonts.googleapis.com/icon?family=Material+Icons",t+"qencode-player.css",t+"share-icons-embedded.css"],o=["https://vjs.zencdn.net/7.4.1/video.js",t+"videojs-http-streaming.min.js",t+"videojs-contrib-quality-levels.min.js",t+"qencode-player.min.js"];for(window.qencodePlayed=!1,i=0;i<d.length;i++)qencodeDependenciesRegistry.append("stylesheet",d[i]);var i,s=window.qencode_player_additional_styles||void 0;if(null==s?console.log("No additional styles defined!"):console.log("Additional styles: "+s.length),null!=s&&Array.isArray(s))for(i=0;i<s.length;i++)console.log("Loading: "+s[i]),qencodeDependenciesRegistry.append("stylesheet",s[i]);for(i=0;i<o.length;i++)qencodeDependenciesRegistry.append("script",o[i]);window.qlog=window.qlog||function(){}}(),function(){"use strict";window.qencodePlayer=function(d,o,i,s,a){if(!window.qencodeDependenciesRegistry)throw new Error("The dependency registry is not available");var r=function(e){var n=window.QencodePlayer;if(!n)throw new Error("QencodePlayer class should have been loaded");var t=new n(d,o,i,s,a);t&&(window.qencodePlayers=window.qencodePlayers||{},window.qencodePlayers[t.getInstanceId()]=t),window.qencodeDependenciesRegistry.removeEventListener("load",r)};window.qencodeDependenciesRegistry.addEventListener("load",r),window.qencodeDependenciesRegistry.load()}}();
//# sourceMappingURL=qencode-bootstrapper.min.js.map